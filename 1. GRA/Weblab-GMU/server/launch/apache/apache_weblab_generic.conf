####################################################
#                                                  #
#            Sample Apache configuration           #
#                                                  #
####################################################
#                                                  #
# In order to integrate WebLab-Deusto in           #
# Apache, the following steps are required:        #
#                                                  #
#   a) Load the required modules                   #
#                                                  #
#   b) Configure the paths to define where is      #
#      the HTML code                               #
#                                                  #
#   c) Configure the proxy module so as to proxy   #
#      the petitions to the weblab servers         #
#                                                  #
####################################################


####################################################
#
#     Step 1: Load the required modules
#
#
# WebLab-Deusto requires the following Apache modules:
#
#   * proxy_module
#   * proxy_balancer_module
#   * proxy_http_module
#
# At least in Debian based distributions as Debian itself
# or Ubuntu, this can be done with the a2enmod command:
#
#   root@plunder:~# a2enmod proxy
#   root@plunder:~# a2enmod proxy_balancer_module
#   root@plunder:~# a2enmod proxy_http_module
#   root@plunder:~# /etc/init.d/apache2 force-reload
#
# However, in Microsoft Windows or other distributions, this
# might become slightly more difficult. To make it easy, you
# can uncomment the following lines in Microsoft Windows if
# using XAMPP as installer, or if you are under Mac OS X:
#
#   <IfModule !mod_proxy.c>
#       LoadModule proxy_module modules/mod_proxy.so
#   </IfModule>
#   <IfModule !mod_proxy_balancer.c>
#       LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#   </IfModule>
#   <IfModule !mod_proxy_http.c>
#       LoadModule proxy_http_module modules/mod_proxy_http.so
#   </IfModule>
#
# Or these other lines in Ubuntu GNU/Linux:
#
#   <IfModule !mod_proxy.c>
#       LoadModule proxy_module /usr/lib/apache/modules/mod_proxy.so
#   </IfModule>
#   <IfModule !mod_proxy_balancer.c>
#       LoadModule proxy_balancer_module /usr/lib/apache/modules/mod_proxy_balancer.so
#   </IfModule>
#   <IfModule !mod_proxy_http.c>
#       LoadModule proxy_http_module /usr/lib/apache/modules/mod_proxy_http.so
#   </IfModule>
#




####################################################
#
#     Step 2: Define the client paths
#
#
# The WebLab-Client is a set of .html and .js files,
# which are available in the following path:
#
#   weblab/client/war
#
# Apache must show these files when requested. In order
# to do so, we must configure that "when a user requests
# /weblab/client/, show the files that are in that folder".
#
# So, uncomment the following code in Microsoft Windows
# (if WebLab-Deusto was installed in C:\weblab)
#
#
# Alias /weblab/client c:/weblab/client/war
# Alias /weblab/ c:/weblab/server/src/webserver/
#
# <Directory "C:/weblab">
#     Options Indexes FollowSymLinks
#     AllowOverride None
#
#     <IfModule authz_core_module>
#         Require all granted
#     </IfModule>
#
#     <IfModule !authz_core_module>
#         Order allow,deny
#         Allow from All
#     </IfModule>
# </Directory>
#
#
# Or these others if using UNIX systems (such as Ubuntu GNU/Linux
# or Mac OS X), if you installed WebLab-Deusto in /var/lib/weblab.
#

# Alias /weblab/client /var/lib/weblab/client
# Alias /weblab/ /var/lib/weblab/server/src/webserver/
#
# <Directory "/var/lib/weblab">
#     Options Indexes FollowSymLinks
#     AllowOverride None
#
#     <IfModule authz_core_module>
#         Require all granted
#     </IfModule>
#
#     <IfModule !authz_core_module>
#         Order allow,deny
#         Allow from All
#     </IfModule>
# </Directory>

#
# These two lines are generic, to support that if a user
# goes to /weblab, he is automatically redirected to /weblab/client/index.html
#

RedirectMatch ^/weblab/$ /weblab/client
RedirectMatch ^/weblab/client/$ /weblab/client/index.html

####################################################
#
#     Step 3: Configure the proxy
#
#
# The WebLab-Deusto servers are implemented in Python,
# and they are listening in different ports. Apache is
# the gateway so requests coming to Apache will be
# forwarded to the different Python servers. Apache
# already handles load balancing.
#
#
# First we add the lines saying which balancers handle
# which requests:
#

ProxyVia On

ProxyPass                       /weblab/                 balancer://weblab_cluster/          stickysession=weblabsessionid lbmethod=bybusyness
ProxyPassReverse                /weblab/                 balancer://weblab_cluster/          stickysession=weblabsessionid

#
# Then we setup which Python servers will listen each requests.
# This can be done with load balancing on a number of servers. Here
# we provide uncommented the basic example (see launch_sample.py in
# weblab/server/launch/ ), which has no load balancing (a single
# server will listen all the petitions). After it we provide the
# different configurations for two and three servers (which are
# launch_sample_balanced1.py and launch_balanced2.py). Both samples
# require updating the Apache configuration so load balancing
# actually works.
#

#
# SINGLE SERVER (NO LOAD BALANCING)
#

<Proxy balancer://weblab_cluster>
    BalancerMember http://localhost:18345/weblab route=route1
</Proxy>


#
# TWO SERVERS (load balancing with two servers: launch_balanced1.py)
#
#
#  <Proxy balancer://weblab_cluster_json>
#      BalancerMember http://localhost:18345/weblab/ route=route1
#      BalancerMember http://localhost:28345/weblab/ route=route2
#  </Proxy>
#
# THREE SERVERS (load balancing with two servers: launch_balanced2.py)
#
#
#  <Proxy balancer://weblab_cluster>
#      BalancerMember http://localhost:18345/weblab/ route=route1
#      BalancerMember http://localhost:28345/weblab/ route=route2
#      BalancerMember http://localhost:38345/weblab/ route=route3
#  </Proxy>
#

